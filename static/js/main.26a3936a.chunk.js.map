{"version":3,"sources":["components/Square/Square.jsx","components/Board/Board.jsx","img/order.svg","components/Game/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Square","props","squareClass","isWinnerSquare","className","onClick","value","Board","i","this","winnerSquares","map","squareNumber","squares","renderSquare","React","Component","Game","handleClick","history","state","slice","stepNumber","current","length","calculateWinner","xIsNext","setState","jumpTo","step","lines","a","b","c","sortSteps","ascending","Array","fill","status","winner","moves","move","desc","filterStatus","reverse","src","sortIcon","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26a3936a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Square.scss';\r\n\r\nlet Square = (props) => {\r\n    let squareClass = \"\";\r\n    if(props.isWinnerSquare) {\r\n        squareClass = \"square_winner\";\r\n    }\r\n\r\n    return (\r\n        <button className={`square ${squareClass}`} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from '../Square/Square';\r\nimport './Board.scss';\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        let isWinnerSquare = false;\r\n        if(this.props.winnerSquares) {\r\n            this.props.winnerSquares.map(squareNumber => {\r\n                if(squareNumber === i) {\r\n                    isWinnerSquare = true;\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n\r\n        return(\r\n            <Square\r\n                isWinnerSquare={isWinnerSquare}\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                <div className=\"board__row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board__row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board__row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","export default __webpack_public_path__ + \"static/media/order.6d752d3a.svg\";","import React from 'react';\r\nimport Board from '../Board/Board';\r\nimport './Game.scss';\r\nimport sortIcon from '../../img/order.svg';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            ascending: true,\r\n            winnerSquares: null,\r\n        };\r\n    }\r\n\r\n    handleClick = (i) => {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = [...current.squares];\r\n        if(this.calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            history: [\r\n                ...history,\r\n                {squares: [...squares]},\r\n            ],\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo = (step) => {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n            winnerSquares: null,\r\n        });\r\n    }\r\n\r\n    calculateWinner = (squares) => {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                if(!this.state.winnerSquares) {\r\n                    this.setState({\r\n                        winnerSquares: [...lines[i]],\r\n                    });\r\n                }\r\n\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    sortSteps = () => {\r\n        const ascending = this.state.ascending;\r\n\r\n        this.setState({\r\n            ascending: !ascending,\r\n        });\r\n    }\r\n\r\n    render()  {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = this.calculateWinner(current.squares);\r\n\r\n        let moves = history.map((step, move) => {\r\n            const desc = move ? \r\n            \"Move to step #\" + move :\r\n            \"Move to game start\";\r\n\r\n            return (\r\n                <div className=\"step\" key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>\r\n                        {desc}\r\n                    </button>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let filterStatus = \"Filter Ascending\";\r\n        if(!this.state.ascending) {\r\n            moves = [...moves.reverse()];\r\n            filterStatus = \"Filter Descending\";\r\n        }\r\n\r\n        let status;\r\n        if(winner) {\r\n            status = \"Winner is: \" + winner;\r\n        } else if (!winner && history.length === 10) {\r\n            status = \"WOW! The game ended in a draw!!\"\r\n        } else {\r\n            status = `Next Player: ${this.state.xIsNext ? \"X\" : \"O\"}`;\r\n        }\r\n\r\n        return(\r\n            <div className=\"game\">\r\n                <div className=\"game__status\">\r\n                    {status}\r\n                </div>\r\n                <div className=\"game__wrap\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                        winnerSquares={this.state.winnerSquares}\r\n                    />\r\n                    <div className=\"game__info\">\r\n                        <div></div>\r\n                        <div className=\"steps\">\r\n                            <div className=\"steps__sort\" onClick={() => this.sortSteps()}>\r\n                                <img src={sortIcon} alt=\"sort\"/>\r\n                                <div>{filterStatus}</div>\r\n                            </div>\r\n                            <div className=\"steps__moves\">\r\n                                {moves}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Game;","import './App.scss';\nimport Game from './components/Game/Game';\n\nfunction App(props) {\n    return (\n        <>\n            <div className=\"container\">\n                <Game />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}