{"version":3,"sources":["components/Square/Square.jsx","components/Board/Board.jsx","img/order.svg","components/Game/Game.jsx","App.js","reportWebVitals.js","reducers/main-reducer.js","store.js","index.js"],"names":["Square","props","squareClass","isWinnerSquare","className","onClick","value","Board","i","this","winnerSquares","map","squareNumber","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","ascending","slice","current","length","calculateWinner","setState","step","lines","a","b","c","status","winner","moves","move","desc","jumpTo","filterStatus","reverse","handleClick","sortSteps","src","sortIcon","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_ITEM","DELETE_ITEM","SET_AS_COMPLETED","initialState","items","id","title","mainReducer","action","type","filter","item","reducers","combineReducers","main","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fd27c3d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Square.scss';\r\n\r\nlet Square = (props) => {\r\n    let squareClass = \"\";\r\n    if(props.isWinnerSquare) {\r\n        squareClass = \"square_winner\";\r\n    }\r\n\r\n    return (\r\n        <button className={`square ${squareClass}`} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from '../Square/Square';\r\nimport './Board.scss';\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        let isWinnerSquare = false;\r\n        if(this.props.winnerSquares) {\r\n            this.props.winnerSquares.map(squareNumber => {\r\n                if(squareNumber === i) {\r\n                    isWinnerSquare = true;\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n\r\n        return(\r\n            <Square\r\n                isWinnerSquare={isWinnerSquare}\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                <div className=\"board__row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board__row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board__row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","export default __webpack_public_path__ + \"static/media/order.6d752d3a.svg\";","import React from 'react';\r\nimport Board from '../Board/Board';\r\nimport './Game.scss';\r\nimport sortIcon from '../../img/order.svg';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            ascending: true,\r\n            winnerSquares: null,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = [...current.squares];\r\n        if(this.calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            history: [\r\n                ...history,\r\n                {squares: [...squares]},\r\n            ],\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n            winnerSquares: null,\r\n        });\r\n    }\r\n\r\n    calculateWinner(squares) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                if(!this.state.winnerSquares) {\r\n                    this.setState({\r\n                        winnerSquares: [...lines[i]],\r\n                    });\r\n                }\r\n\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    sortSteps() {\r\n        const ascending = this.state.ascending;\r\n\r\n        this.setState({\r\n            ascending: !ascending,\r\n        });\r\n    }\r\n\r\n    render()  {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = this.calculateWinner(current.squares);\r\n\r\n        let moves = history.map((step, move) => {\r\n            const desc = move ? \r\n            \"Move to step #\" + move :\r\n            \"Move to game start\";\r\n\r\n            return (\r\n                <div className=\"step\" key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>\r\n                        {desc}\r\n                    </button>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let filterStatus = \"Filter Ascending\";\r\n        if(!this.state.ascending) {\r\n            moves = [...moves.reverse()];\r\n            filterStatus = \"Filter Descending\";\r\n        }\r\n\r\n        let status;\r\n        if(winner) {\r\n            status = \"Winner is: \" + winner;\r\n        } else if (!winner && history.length === 10) {\r\n            status = \"WOW! The game ended in a draw!!\"\r\n        } else {\r\n            status = `Next Player: ${this.state.xIsNext ? \"X\" : \"O\"}`;\r\n        }\r\n\r\n        return(\r\n            <div className=\"game\">\r\n                <div className=\"game__status\">\r\n                    {status}\r\n                </div>\r\n                <div className=\"game__wrap\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                        winnerSquares={this.state.winnerSquares}\r\n                    />\r\n                    <div className=\"game__info\">\r\n                        <div></div>\r\n                        <div className=\"steps\">\r\n                            <div className=\"steps__sort\" onClick={() => this.sortSteps()}>\r\n                                <img src={sortIcon} alt=\"sort\"/>\r\n                                <div>{filterStatus}</div>\r\n                            </div>\r\n                            <div className=\"steps__moves\">\r\n                                {moves}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Game;","import './App.scss';\nimport Game from './components/Game/Game';\n\nfunction App(props) {\n    return (\n        <>\n            <div className=\"container\">\n                <Game />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_ITEM = \"ADD_ITEM\";\r\nconst DELETE_ITEM = \"DELETE_ITEM\";\r\nconst SET_AS_COMPLETED = \"SET_AS_COMPLETED\";\r\n\r\nconst initialState = {\r\n    items: [\r\n        {\r\n            id: 1,\r\n            title: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Enim, commodi! Ipsa assumenda praesentium, adipisci soluta maiores quasi aut! Voluptate repellendus velit fugit architecto quod atque quis ullam sapiente ex asperiores.\",\r\n            status: \"ongoing\",\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Enim, commodi! Ipsa assumenda praesentium, adipisci soluta maiores quasi aut! Voluptate repellendus velit fugit architecto quod atque quis ullam sapiente ex asperiores.\",\r\n            status: \"ongoing\",\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Enim, commodi! Ipsa assumenda praesentium, adipisci soluta maiores quasi aut! Voluptate repellendus velit fugit architecto quod atque quis ullam sapiente ex asperiores.\",\r\n            status: \"ongoing\",\r\n        }\r\n    ]\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_ITEM: \r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    {\r\n                        id: state.items.length + 1,\r\n                        title: action.title,\r\n                        status: \"ongoing\",\r\n                    }\r\n                ],\r\n            }\r\n        case DELETE_ITEM: \r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item.id !== action.id),\r\n            }\r\n        case SET_AS_COMPLETED: \r\n            return {\r\n                ...state,\r\n                items: state.items.map(item => {\r\n                    if (item.id === action.id){\r\n                        if(item.status === \"ongoing\") {\r\n                            return {\r\n                                ...item,\r\n                                status: \"completed\",\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                ...item,\r\n                                status: \"ongoing\",\r\n                            }\r\n                        }\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addItem = (title) => ({\r\n    type: ADD_ITEM,\r\n    title,\r\n});\r\n\r\nexport const deleteItem = (id) => ({\r\n    type: DELETE_ITEM,\r\n    id,\r\n});\r\n\r\nexport const setAsCompleted = (id) => ({\r\n    type: SET_AS_COMPLETED,\r\n    id,\r\n});\r\n\r\nexport default mainReducer;\r\n\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport mainReducer from \"./reducers/main-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    main: mainReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}